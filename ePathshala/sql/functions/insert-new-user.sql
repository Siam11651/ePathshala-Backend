CREATE OR REPLACE FUNCTION INSERT_USER(PARAM_FULL_NAME VARCHAR, PARAM_EMAIL VARCHAR, PARAM_PASSWORD VARCHAR, PARAM_DATE_OF_BIRTH VARCHAR, PARAM_STUDENT BOOL)
RETURNS INT
LANGUAGE PLPGSQL
AS
$$
DECLARE
	NEW_USER_ID BIGINT;
BEGIN
	SELECT USERS.USER_ID INTO NEW_USER_ID
	FROM USERS
	JOIN STUDENTS
	ON(USERS.USER_ID = STUDENTS.USER_ID)
	WHERE EMAIL = PARAM_EMAIL;
	IF NEW_USER_ID IS NOT NULL THEN
		RETURN -1; --STUDENT ALREADY PRESENT
	END IF;
	SELECT USERS.USER_ID INTO NEW_USER_ID
	FROM USERS
	JOIN TEACHERS
	ON(USERS.USER_ID = TEACHERS.USER_ID)
	WHERE EMAIL = PARAM_EMAIL;
	IF NEW_USER_ID IS NOT NULL THEN
		RETURN -2; --TEACHER ALREADY PRESENT
	END IF;
	NEW_USER_ID = GET_NEW_USER_ID();
	INSERT INTO USERS
	(USER_ID, FULL_NAME, EMAIL, SECURITY_KEY, DATE_OF_BIRTH)
	VALUES(NEW_USER_ID, PARAM_FULL_NAME, PARAM_EMAIL, PARAM_PASSWORD, TO_DATE(PARAM_DATE_OF_BIRTH, 'YYYY-MM-DD'));
	IF PARAM_STUDENT THEN
		INSERT INTO STUDENTS (USER_ID)
		VALUES (NEW_USER_ID);
	ELSE
		INSERT INTO TEACHERS (USER_ID)
		VALUES (NEW_USER_ID);
	END IF;
	RETURN NEW_USER_ID; --SUCCESS
END;
$$;