CREATE OR REPLACE FUNCTION GET_TEACHER_DETAILS(PARAM_TEACHER_ID BIGINT)
RETURNS TABLE(USER_ID BIGINT, FULL_NAME VARCHAR, EMAIL VARCHAR, BIO VARCHAR, DATE_OF_BIRTH DATE, DATE_OF_JOIN DATE, RATE NUMERIC)
LANGUAGE PLPGSQL
AS
$$
DECLARE
	RATED_COUNT BIGINT;
	TEACHER_RATE NUMERIC;
BEGIN
	SELECT COUNT(*) INTO RATED_COUNT
	FROM CONTENT_VIEWERS
	JOIN CONTENTS
	ON (CONTENT_VIEWERS.CONTENT_ID = CONTENTS.CONTENT_ID)
	JOIN COURSES
	ON (CONTENTS.COURSE_ID = COURSES.COURSE_ID)
	WHERE CREATOR_ID = PARAM_TEACHER_ID AND CONTENT_VIEWERS.RATE IS NOT NULL;
	IF RATED_COUNT > 0 THEN
		SELECT AVG(CONTENT_VIEWERS.RATE) INTO RATED_COUNT
		FROM CONTENT_VIEWERS
		JOIN CONTENTS
		ON (CONTENT_VIEWERS.CONTENT_ID = CONTENTS.CONTENT_ID)
		JOIN COURSES
		ON (CONTENTS.COURSE_ID = COURSES.COURSE_ID)
		WHERE CREATOR_ID = PARAM_TEACHER_ID AND CONTENT_VIEWERS.RATE IS NOT NULL;
	ELSE
		TEACHER_RATE := 0;
	END IF;
	RETURN QUERY SELECT TEACHERS.USER_ID, USERS.FULL_NAME, USERS.EMAIL, TRIM(USERS.BIO)::VARCHAR, USERS.DATE_OF_BIRTH, TEACHERS.DATE_OF_JOIN, TEACHER_RATE
	FROM TEACHERS
	JOIN USERS
	ON (TEACHERS.USER_ID = USERS.USER_ID)
	WHERE TEACHERS.USER_ID = PARAM_TEACHER_ID;
END;
$$;